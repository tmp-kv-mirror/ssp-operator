on:
  release:
    types: [published]

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}

      - name: Create API tag
        uses: actions/github-script@v7
        with:
          script: |
            const releaseRef = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "tags/${{ steps.get_release.outputs.tag_name }}"
            });
            
            const apiTagName = "api/${{ steps.get_release.outputs.tag_name }}";
            
            const apiTag = await github.rest.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: apiTagName,
              message: apiTagName,
              object: releaseRef.data.object.sha,
              type: "commit",
              tagger: {
                name: "SSP Operator Automation",
                email: "noreply@github.com",
              }
            });
            
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${apiTagName}`,
              sha: apiTag.data.sha
            });

      - name: Publish operator image and generate release assets
        run: |
          podman login -u="${{ secrets.QUAY_BOT }}" -p="${{ secrets.QUAY_PASSWORD }}" quay.io
          export IMG_TAG="${{ steps.get_release.outputs.tag_name }}"
          export VALIDATOR_IMG_TAG="${{ steps.get_release.outputs.tag_name }}"
          export VERSION="`echo ${{ steps.get_release.outputs.tag_name }} | sed 's/^v//'`"
          make release

      - name: Upload CRD Asset
        id: upload-crd-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./_out/olm-crds.yaml
          asset_name: olm-crds.yaml
          asset_content_type: text/plain

      - name: Upload CSV Asset
        id: upload-csv-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./_out/olm-ssp-operator.clusterserviceversion.yaml
          asset_name: olm-ssp-operator.clusterserviceversion.yaml
          asset_content_type: text/plain

      - name: Upload Operator Asset
        id: upload-operator-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./_out/ssp-operator.yaml
          asset_name: ssp-operator.yaml
          asset_content_type: text/plain
